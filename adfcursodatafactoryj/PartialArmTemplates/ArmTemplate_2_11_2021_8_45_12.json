{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "adfcursodatafactoryj"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_CAPTURAR_ERROR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "mensaje",
							"value": {
								"value": "@string(activity('Copy data1').output.errors)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * dbo.usuario",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tbl_az_usuario",
								"type": "DatasetReference",
								"parameters": {
									"nombretabla": "usuario",
									"esquema": "dbo"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_CopiaArchivoOnprime",
								"type": "DatasetReference"
							}
						]
					}
				],
				"variables": {
					"control": {
						"type": "String"
					},
					"mensaje": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CONTROL DE FLUJO"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tbl_az_usuario')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CONTROL_FLUJO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "control",
							"value": {
								"value": "@add(5,3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "mensaje",
							"value": "Pipeline fallo"
						}
					},
					{
						"name": "Set variable1_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "control",
							"value": {
								"value": "@add(5,3)",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"control": {
						"type": "String"
					},
					"mensaje": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CONTROL DE FLUJO"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPIA_NOMBRADA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CODUSUARIO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CODUSUARIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RAZONSOCIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RAZONSOCIAL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CODSUPLENTE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CODSUPLENTE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SNDISPONIBLE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SNDISPONIBLE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EMAIL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EMAIL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CODUSUARIOGRUPO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CODUSUARIOGRUPO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NROUSUARIOBD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "NROUSUARIOBD",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "FECALTA",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "FECALTA",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "FECMODIFICACION",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "FECMODIFICACION",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "USUARIO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ESTADO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ESTADO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GUIDSTAMP",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "GUIDSTAMP",
											"type": "Byte[]",
											"physicalType": "Byte[]"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tbl_usuario",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "tbl_az_usuario",
								"type": "DatasetReference",
								"parameters": {
									"nombretabla": "Usuario",
									"esquema": "dbo"
								}
							}
						]
					}
				],
				"folder": {
					"name": "CLASE 3"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tbl_az_usuario')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPIA_QUERY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT CODUSUARIO, RAZONSOCIAL, CODSUPLENTE, SNDISPONIBLE, EMAIL, CODUSUARIOGRUPO, NROUSUARIOBD, FECALTA, FECMODIFICACION, USUARIO, ESTADO, GUIDSTAMP\nFROM INBROKER.dbo.AA_USUARIO",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE FROM DBO.USUARIO",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CODUSUARIO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CODUSUARIO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RAZONSOCIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RAZONSOCIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CODSUPLENTE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CODSUPLENTE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SNDISPONIBLE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SNDISPONIBLE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EMAIL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EMAIL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CODUSUARIOGRUPO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CODUSUARIOGRUPO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NROUSUARIOBD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "NROUSUARIOBD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										}
									},
									{
										"source": {
											"name": "FECALTA",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "FECALTA",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "FECMODIFICACION",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "FECMODIFICACION",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "USUARIO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ESTADO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ESTADO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GUIDSTAMP",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "GUIDSTAMP",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tbl_usuario",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "tbl_az_usuario",
								"type": "DatasetReference",
								"parameters": {
									"nombretabla": "Usuario",
									"esquema": "dbo"
								}
							}
						]
					}
				],
				"folder": {
					"name": "CLASE 3"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tbl_az_usuario')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPIA_QUERY_PARAM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@pipeline().parameters.query",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "DELETE FROM DBO.@{pipeline().parameters.tabladestino}",
									"type": "Expression"
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CODUSUARIO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CODUSUARIO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RAZONSOCIAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RAZONSOCIAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CODSUPLENTE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CODSUPLENTE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SNDISPONIBLE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SNDISPONIBLE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EMAIL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EMAIL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CODUSUARIOGRUPO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CODUSUARIOGRUPO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NROUSUARIOBD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										},
										"sink": {
											"name": "NROUSUARIOBD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 14
										}
									},
									{
										"source": {
											"name": "FECALTA",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "FECALTA",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "FECMODIFICACION",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "FECMODIFICACION",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "USUARIO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "USUARIO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ESTADO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ESTADO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GUIDSTAMP",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "GUIDSTAMP",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tbl_usuario",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "tbl_az_usuario",
								"type": "DatasetReference",
								"parameters": {
									"nombretabla": {
										"value": "@pipeline().parameters.tabladestino",
										"type": "Expression"
									},
									"esquema": "dbo"
								}
							}
						]
					}
				],
				"parameters": {
					"query": {
						"type": "string"
					},
					"tabladestino": {
						"type": "string"
					}
				},
				"folder": {
					"name": "CLASE 4"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tbl_az_usuario')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ELIMINAR_ARCHIVOS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Eliminar",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "bin_archivo_eliminar",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"folder": {
					"name": "CLASE ASINCRONICA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/bin_archivo_eliminar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ERRORES_PILINES_ORQUESTADOS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_CONTROL_FLUJO",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CONTROL_FLUJO",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "PL_CAPTURAR_ERROR",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_CONTROL_FLUJO",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CAPTURAR_ERROR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"folder": {
					"name": "CONTROL DE FLUJO"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_CONTROL_FLUJO')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CAPTURAR_ERROR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INGESTA_DELTA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select\nidFactura,\nidCliente,\nidEmpleado,\nfechaFactura,\nsubtotal,\nimpuestos\nfrom [dbo].[Factura]\nwhere\nyear(fechaFactura)=@{pipeline().parameters.anio} and\nmonth(fechaFactura)=@{pipeline().parameters.mes}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tbl_factura",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "csv_factura",
								"type": "DatasetReference",
								"parameters": {
									"directorio": {
										"value": "Factura/@{pipeline().parameters.anio}/@{pipeline().parameters.mes}",
										"type": "Expression"
									},
									"nombreArchivo": "Factura"
								}
							}
						]
					}
				],
				"parameters": {
					"anio": {
						"type": "string"
					},
					"mes": {
						"type": "string"
					}
				},
				"folder": {
					"name": "CLASE ASINCRONICA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tbl_factura')]",
				"[concat(variables('factoryId'), '/datasets/csv_factura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INGESTA_PERIODO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Generar Rango Fechas",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @MinDate DATE = '@{pipeline().parameters.fechaDesde}',\n        @MaxDate DATE = '@{pipeline().parameters.fechaHasta}';\n\nSELECT CONVERT(varchar,fechaCorte,23) AS fechaCorte, MONTH(fechaCorte) as mesCorte, YEAR(fechaCorte) as anioCorte\nFROM\n(\n\tSELECT  \n\tTOP (DATEDIFF(MONTH, @MinDate, @MaxDate) + 1)\n\tfechaCorte = EOMONTH(DATEADD(MONTH, ROW_NUMBER() OVER(ORDER BY a.object_id) - 1, @MinDate))\n\tFROM    sys.all_objects a \n\tCROSS JOIN sys.all_objects b\n)fechas\n\nORDER BY fechaCorte;",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "tbl_factura",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Generar Rango Fechas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@array(activity('Generar Rango Fechas').output.value)",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "PL_INGESTA_DELTA",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_INGESTA_DELTA",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"anio": {
												"value": "@item().anioCorte",
												"type": "Expression"
											},
											"mes": {
												"value": "@item().mesCorte",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"fechaDesde": {
						"type": "string"
					},
					"fechaHasta": {
						"type": "string"
					}
				},
				"folder": {
					"name": "CLASE ASINCRONICA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tbl_factura')]",
				"[concat(variables('factoryId'), '/pipelines/PL_INGESTA_DELTA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PROCEDIMIENTO_CON_RESULTADO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[Saludar]",
								"storedProcedureParameters": {
									"nombre": {
										"type": "String",
										"value": "Jonatan"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sp_ejecucion",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "csv_resultado_procedimiento",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "CLASE ASINCRONICA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sp_ejecucion')]",
				"[concat(variables('factoryId'), '/datasets/csv_resultado_procedimiento')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PROCEDIMIENTO_SIN_CAPTURA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Saludar]",
							"storedProcedureParameters": {
								"nombre": {
									"value": "Jonatan",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azsqldb_j",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "CLASE ASINCRONICA"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SUMAR_NUMEROS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "suma",
							"value": {
								"value": "@string(add(pipeline().parameters.a,pipeline().parameters.b))",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"a": {
						"type": "int",
						"defaultValue": 0
					},
					"b": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"suma": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CLASE 4"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_USO_CONDICIONAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Par o Impar",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(mod(pipeline().parameters.numero,2),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Resultado Impar",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "resultado",
										"value": {
											"value": "EL número @{pipeline().parameters.numero} es Impar",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Resultado Par",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "resultado",
										"value": {
											"value": "EL número @{pipeline().parameters.numero} es par",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"numero": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CLASE ASINCRONICA"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_USO_FECHAS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fecha",
							"value": {
								"value": "@convertToUtc(\nconcat(pipeline().parameters.mes,'/01/',pipeline().parameters.anio)\n,'Pacific Standard Time'\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechamas1mes",
							"value": {
								"value": "@addToTime(variables('fecha'),1,'Month')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"anio": {
						"type": "string"
					},
					"mes": {
						"type": "string"
					}
				},
				"variables": {
					"fecha": {
						"type": "String"
					},
					"fechamas1mes": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CLASE 4"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_USO_LOOKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select idConsulta,consulta,tablaDestino from ParametroConsulta",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "tbl_parametros_consulta",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@array(activity('Lookup1').output.value)",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "PL_COPIA_QUERY_PARAM",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_COPIA_QUERY_PARAM",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"query": {
												"value": "@item().consulta",
												"type": "Expression"
											},
											"tabladestino": {
												"value": "@item().tablaDestino",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "CLASE 4"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tbl_parametros_consulta')]",
				"[concat(variables('factoryId'), '/pipelines/PL_COPIA_QUERY_PARAM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_USO_SWITCH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.bandera",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "A",
									"activities": [
										{
											"name": "Suma",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "mensaje",
												"value": {
													"value": "@string(add(pipeline().parameters.numero1,pipeline().parameters.numero2))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "B",
									"activities": [
										{
											"name": "Multiplicar",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "mensaje",
												"value": {
													"value": "@string(mul(pipeline().parameters.numero1,pipeline().parameters.numero2))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "C",
									"activities": [
										{
											"name": "Dividir",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "mensaje",
												"value": {
													"value": "@string(div(pipeline().parameters.numero1,pipeline().parameters.numero2))",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Defecto",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "mensaje",
										"value": {
											"value": "Valo por Defecto",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"bandera": {
						"type": "string",
						"defaultValue": "x"
					},
					"numero1": {
						"type": "int",
						"defaultValue": 10
					},
					"numero2": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"mensaje": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CLASE ASINCRONICA"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_USO_VARIABLES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "resultado",
							"value": {
								"value": "El número @{pipeline().parameters.numero} es  @{if(\nequals(string(mod(pipeline().parameters.numero,2)),'1')\n,'impar'\n,'par'\n)}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"numero": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CLASE 4"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_USO_WAIT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Esperar",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "mensaje",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Esperar",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "mensaje",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"mensaje": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CLASE ASINCRONICA"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bin_archivo_eliminar')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_cursodfjj",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CursoDf.xlsx",
						"container": "cargadedatos"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_factura')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_cursodfjj",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directorio": {
						"type": "string"
					},
					"nombreArchivo": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@{dataset().nombreArchivo}.csv",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directorio",
							"type": "Expression"
						},
						"container": "aci-layer1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_resultado_procedimiento')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_cursodfjj",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "resultadoSaludo",
						"folderPath": "Saludo",
						"container": "aci-resultados"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sp_ejecucion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azsqldb_j",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tbl_az_usuario')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azsqldb_j",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"nombretabla": {
						"type": "string"
					},
					"esquema": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().esquema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().nombretabla",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tbl_factura')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azsqldb_j",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tbl_parametros_consulta')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azsqldb_j",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ln_filesystem_omprimese')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "D:\\Jonatan Jacome\\OneDrive - handytec.mobi\\Documents",
					"userId": "handytec\\jonatan.jacome",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_vaulcursodf_j",
							"type": "LinkedServiceReference"
						},
						"secretName": "maquinalocal"
					}
				},
				"connectVia": {
					"referenceName": "ir-conexion-onpremisej",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		}
	]
}