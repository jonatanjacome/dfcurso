{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "adfcursodatafactoryj"
		},
		"ln_datalake_curo_df_accountKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accountKey\"de \"ln_datalake_curo_df\""
		},
		"ls_azsqldb_j_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"ls_azsqldb_j\""
		},
		"ls_cursodfjj_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"ls_cursodfjj\""
		},
		"lk_parquet_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://dlcursodfjj.azuredatalakestore.net/webhdfs/v1"
		},
		"lk_parquet_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "aa252574-0318-4cf9-a52e-fe292f4db451"
		},
		"lk_parquet_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "42f28b87-0494-4079-bad0-6ce6be524227"
		},
		"lk_parquet_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "gr_curso_datafactory"
		},
		"ln_datalake_curo_df_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dslcursodatafactorydev.dfs.core.windows.net"
		},
		"ls_vaulcursodf_j_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kvcursodatafactoryjj.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_CONTROL_FLUJO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "control",
							"value": {
								"value": "@add(5,3)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "mensaje",
							"value": "Pipeline fallo"
						}
					},
					{
						"name": "Set variable1_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "control",
							"value": {
								"value": "@add(5,3)",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"control": {
						"type": "String"
					},
					"mensaje": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CONTROL DE FLUJO"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SUMAR_NUMEROS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "suma",
							"value": {
								"value": "@string(add(pipeline().parameters.a,pipeline().parameters.b))",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"a": {
						"type": "int",
						"defaultValue": 0
					},
					"b": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"suma": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CLASE 4"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_USO_CONDICIONAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Par o Impar",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(mod(pipeline().parameters.numero,2),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Resultado Impar",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "resultado",
										"value": {
											"value": "EL número @{pipeline().parameters.numero} es Impar",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Resultado Par",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "resultado",
										"value": {
											"value": "EL número @{pipeline().parameters.numero} es par",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"numero": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CLASE ASINCRONICA"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_USO_FECHAS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fecha",
							"value": {
								"value": "@convertToUtc(\nconcat(pipeline().parameters.mes,'/01/',pipeline().parameters.anio)\n,'Pacific Standard Time'\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fechamas1mes",
							"value": {
								"value": "@addToTime(variables('fecha'),1,'Month')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"anio": {
						"type": "string"
					},
					"mes": {
						"type": "string"
					}
				},
				"variables": {
					"fecha": {
						"type": "String"
					},
					"fechamas1mes": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CLASE 4"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_USO_SWITCH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.bandera",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "A",
									"activities": [
										{
											"name": "Suma",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "mensaje",
												"value": {
													"value": "@string(add(pipeline().parameters.numero1,pipeline().parameters.numero2))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "B",
									"activities": [
										{
											"name": "Multiplicar",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "mensaje",
												"value": {
													"value": "@string(mul(pipeline().parameters.numero1,pipeline().parameters.numero2))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "C",
									"activities": [
										{
											"name": "Dividir",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "mensaje",
												"value": {
													"value": "@string(div(pipeline().parameters.numero1,pipeline().parameters.numero2))",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Defecto",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "mensaje",
										"value": {
											"value": "Valo por Defecto",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"bandera": {
						"type": "string",
						"defaultValue": "x"
					},
					"numero1": {
						"type": "int",
						"defaultValue": 10
					},
					"numero2": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"mensaje": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CLASE ASINCRONICA"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_USO_VARIABLES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "resultado",
							"value": {
								"value": "El número @{pipeline().parameters.numero} es  @{if(\nequals(string(mod(pipeline().parameters.numero,2)),'1')\n,'impar'\n,'par'\n)}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"numero": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CLASE 4"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_USO_WAIT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Esperar",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "mensaje",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Esperar",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "mensaje",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"mensaje": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CLASE ASINCRONICA"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lk_parquet')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('lk_parquet_properties_typeProperties_dataLakeStoreUri')]",
					"tenant": "[parameters('lk_parquet_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('lk_parquet_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('lk_parquet_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ln_datalake_curo_df')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ln_datalake_curo_df_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ln_datalake_curo_df_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azsqldb_j')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_azsqldb_j_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_cursodfjj')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_cursodfjj_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_vaulcursodf_j')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_vaulcursodf_j_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ir-conexion-onpremisej')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PROCEDIMIENTO_SIN_CAPTURA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Saludar]",
							"storedProcedureParameters": {
								"nombre": {
									"value": "Jonatan",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azsqldb_j",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "CLASE ASINCRONICA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azsqldb_j')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_CopiaArchivoOnprime')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_cursodfjj",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "descargadatos"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_cursodfjj')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bin_archivo_eliminar')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_cursodfjj",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CursoDf.xlsx",
						"container": "cargadedatos"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_cursodfjj')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_factura')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_cursodfjj",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directorio": {
						"type": "string"
					},
					"nombreArchivo": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@{dataset().nombreArchivo}.csv",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directorio",
							"type": "Expression"
						},
						"container": "aci-layer1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_cursodfjj')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_resultado_procedimiento')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_cursodfjj",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "resultadoSaludo",
						"folderPath": "Saludo",
						"container": "aci-resultados"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_cursodfjj')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cargadatos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_cursodfjj",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Final",
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cargadedatos"
					},
					"range": "A1:J8",
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "grupo",
						"type": "String"
					},
					{
						"name": "Tipo",
						"type": "String"
					},
					{
						"name": "Nombre",
						"type": "String"
					},
					{
						"name": "pipelinePadre",
						"type": "String"
					},
					{
						"name": "descripcion",
						"type": "String"
					},
					{
						"name": "input",
						"type": "String"
					},
					{
						"name": "output",
						"type": "String"
					},
					{
						"name": "periodicidad",
						"type": "String"
					},
					{
						"name": "ubicación",
						"type": "String"
					},
					{
						"name": "emails",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_cursodfjj')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pk_descarga_datos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ln_datalake_curo_df",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "descargadatos"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ln_datalake_curo_df')]"
			]
		}
	]
}